/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;
import dbConnection.DatabaseConnection;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author JESSEN SALAYSAY
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        loadRoomTBL();
        fetchStatusFromDatabase();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        logoutBTN = new javax.swing.JButton();
        logoLBL = new javax.swing.JLabel();
        dashboardBTN = new javax.swing.JButton();
        roomsBTN = new javax.swing.JButton();
        bookingBTN = new javax.swing.JButton();
        reportsBTN = new javax.swing.JButton();
        customersBTN = new javax.swing.JButton();
        JTabbedPane = new javax.swing.JTabbedPane();
        dashboardPNL = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        roomsPNL = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        addBTN = new javax.swing.JButton();
        searchTXT = new javax.swing.JTextField();
        roomNo = new javax.swing.JLabel();
        roomType = new javax.swing.JLabel();
        roomNoTXT = new javax.swing.JTextField();
        roomTypeTXT = new javax.swing.JTextField();
        priceTXT = new javax.swing.JTextField();
        priceLBL = new javax.swing.JLabel();
        statusLBL = new javax.swing.JLabel();
        statusCBX = new javax.swing.JComboBox<>();
        searchBTN1 = new javax.swing.JButton();
        updateBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        clearBTN = new javax.swing.JButton();
        bookingsPNL = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        reportsPNL = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        customersPNL = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(10, 61, 98));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoutBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        logoutBTN.setText("LOGOUT");
        logoutBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBTNActionPerformed(evt);
            }
        });
        jPanel2.add(logoutBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, 150, 40));

        logoLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/200whiteLOGO.png"))); // NOI18N
        jPanel2.add(logoLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, -1));

        dashboardBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dashboardBTN.setText("DASHBOARD");
        dashboardBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardBTNActionPerformed(evt);
            }
        });
        jPanel2.add(dashboardBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 150, 40));

        roomsBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        roomsBTN.setText("ROOMS");
        roomsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomsBTNActionPerformed(evt);
            }
        });
        jPanel2.add(roomsBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 150, 40));

        bookingBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bookingBTN.setText("BOOKING");
        bookingBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingBTNActionPerformed(evt);
            }
        });
        jPanel2.add(bookingBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 150, 40));

        reportsBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        reportsBTN.setText("REPORTS");
        reportsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsBTNActionPerformed(evt);
            }
        });
        jPanel2.add(reportsBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 150, 40));

        customersBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        customersBTN.setText("CUSTOMERS");
        customersBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersBTNActionPerformed(evt);
            }
        });
        jPanel2.add(customersBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 150, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 750));

        dashboardPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("DASHBOARD");
        dashboardPNL.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, -1, -1));

        JTabbedPane.addTab("DASHBOARD", dashboardPNL);

        roomsPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room No.", "Room Type", "Price", "Status"
            }
        ));
        jScrollPane1.setViewportView(roomTable);

        roomsPNL.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 430, 570));

        addBTN.setText("ADD");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });
        roomsPNL.add(addBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 460, 130, 40));
        roomsPNL.add(searchTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 200, 40));

        roomNo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        roomNo.setText("Room No:");
        roomsPNL.add(roomNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 180, 90, 40));

        roomType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        roomType.setText("Room Type:");
        roomsPNL.add(roomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 240, 110, 40));

        roomNoTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNoTXTActionPerformed(evt);
            }
        });
        roomsPNL.add(roomNoTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 180, 160, 40));
        roomsPNL.add(roomTypeTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 240, 160, 40));
        roomsPNL.add(priceTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 300, 160, 40));

        priceLBL.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        priceLBL.setText("Price:");
        roomsPNL.add(priceLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 70, 40));

        statusLBL.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        statusLBL.setText("Status:");
        roomsPNL.add(statusLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 360, 80, 40));

        statusCBX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusCBXActionPerformed(evt);
            }
        });
        roomsPNL.add(statusCBX, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 360, 160, 40));

        searchBTN1.setText("SEARCH");
        searchBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTN1ActionPerformed(evt);
            }
        });
        roomsPNL.add(searchBTN1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, 80, 40));

        updateBTN.setText("UPDATE");
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });
        roomsPNL.add(updateBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 460, 130, 40));

        deleteBTN.setText("DELETE");
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });
        roomsPNL.add(deleteBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 510, 130, 40));

        clearBTN.setText("CLEAR");
        clearBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBTNActionPerformed(evt);
            }
        });
        roomsPNL.add(clearBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 510, 130, 40));

        JTabbedPane.addTab("ROOMS", roomsPNL);

        bookingsPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("BOOKINGS");
        bookingsPNL.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, -1, -1));

        JTabbedPane.addTab("BOOKING", bookingsPNL);

        reportsPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("REPORTS");
        reportsPNL.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, -1));

        JTabbedPane.addTab("REPORTS", reportsPNL);

        customersPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("CUSTOMERS");
        customersPNL.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, -1, -1));

        JTabbedPane.addTab("CUSTOMERS", customersPNL);

        getContentPane().add(JTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, -30, 940, 780));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBTNActionPerformed
        Load loadFrame = new Load();
        this.setVisible(false);
        loadFrame.setVisible(true);
    }//GEN-LAST:event_logoutBTNActionPerformed

    private void dashboardBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardBTNActionPerformed
        JTabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_dashboardBTNActionPerformed

    private void roomsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomsBTNActionPerformed
        JTabbedPane.setSelectedIndex(1);
    }//GEN-LAST:event_roomsBTNActionPerformed

    private void bookingBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingBTNActionPerformed
        JTabbedPane.setSelectedIndex(2);
    }//GEN-LAST:event_bookingBTNActionPerformed

    private void reportsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsBTNActionPerformed
        JTabbedPane.setSelectedIndex(3);
    }//GEN-LAST:event_reportsBTNActionPerformed

    private void customersBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersBTNActionPerformed
        JTabbedPane.setSelectedIndex(4);
    }//GEN-LAST:event_customersBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        String roomNo = roomNoTXT.getText();
    String search = searchTXT.getText();
    String roomType = roomTypeTXT.getText();
    String price = priceTXT.getText();
    String status = (String) statusCBX.getSelectedItem(); // Get selected status

    // Validate inputs (you can adjust validation rules)
    if (roomNo.isEmpty() || search.isEmpty() || roomType.isEmpty() || price.isEmpty() || status == null) {
        JOptionPane.showMessageDialog(this, "Please fill all fields before adding the room.");
        return;
    }

    // Convert price to a valid format (double) if needed
    double roomPrice;
    try {
        roomPrice = Double.parseDouble(price);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid price.");
        return;
    }

    // Create the SQL query to insert data into the database
    String query = "INSERT INTO rooms (roomNo, searchKey, roomType, price, status) VALUES (?, ?, ?, ?, ?)";

    // Connect to the database and execute the query
    try (Connection conn = DatabaseConnection.getInstance().getConnection();
         PreparedStatement stmt = conn.prepareStatement(query)) {

        // Set parameters for the prepared statement
        stmt.setString(1, roomNo);
        stmt.setString(2, search);
        stmt.setString(3, roomType);
        stmt.setDouble(4, roomPrice);
        stmt.setString(5, status);

        // Execute the update
        int rowsAffected = stmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Room added successfully!");
            // Optionally, clear the fields after successful addition
            clearFields();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add room.");
        }
    } catch (SQLException e) {
        // Handle SQL exceptions
        JOptionPane.showMessageDialog(this, "Error occurred while adding room: " + e.getMessage());
    }
    }//GEN-LAST:event_addBTNActionPerformed

    private void roomNoTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNoTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNoTXTActionPerformed

    private void statusCBXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusCBXActionPerformed
        // Only fetch data if the combo box is empty
    if (statusCBX.getItemCount() == 0) {
        fetchStatusFromDatabase();
    }

    }//GEN-LAST:event_statusCBXActionPerformed

    private void searchBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTN1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBTN1ActionPerformed

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void clearBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBTNActionPerformed
        clearFields();
    }//GEN-LAST:event_clearBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

public void loadRoomTBL() {
        // SQL query to fetch room data
        String query = "SELECT roomID, roomType, price, availabilityStatus FROM room";

        // Get the database connection from the DatabaseConnection singleton
        try (Connection conn = DatabaseConnection.getInstance().getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            // Create a DefaultTableModel to handle the table data
            DefaultTableModel model = (DefaultTableModel) roomTable.getModel();
            model.setRowCount(0); // Clear existing rows

            // Iterate over the result set and add rows to the table
            while (rs.next()) {
                int roomID = rs.getInt("roomID");
                String roomType = rs.getString("roomType");
                double price = rs.getDouble("price");
                String availabilityStatus = rs.getString("availabilityStatus");

                // Add row to the table
                model.addRow(new Object[]{roomID, roomType, price, availabilityStatus});
            }

        } catch (SQLException e) {
            // Log or handle the exception as needed
            e.printStackTrace();
            // Optionally, show a user-friendly message in the UI
            // JOptionPane.showMessageDialog(null, "Error loading room data: " + e.getMessage());
        }
    }

    private void clearFields() {
    roomNoTXT.setText("");
    searchTXT.setText("");
    roomTypeTXT.setText("");
    priceTXT.setText("");
    statusCBX.setSelectedIndex(-1);
}

// Method to fetch statuses from the database and populate the combo box
private void fetchStatusFromDatabase() {
    String query = "SELECT DISTINCT status FROM rooms"; // Fetch distinct statuses from the room table

    try (Connection conn = DatabaseConnection.getInstance().getConnection();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(query)) {

        // Clear existing items
        statusCBX.removeAllItems();

        // Add default or placeholder value (optional)
        statusCBX.addItem("Select Status");

        // Loop through result set and add each status to the combo box
        while (rs.next()) {
            String status = rs.getString("status");
            statusCBX.addItem(status);
        }

    } catch (SQLException e) {
        // Handle errors (e.g., show a message to the user)
        JOptionPane.showMessageDialog(this, "Error fetching status data: " + e.getMessage());
    }}
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane JTabbedPane;
    private javax.swing.JButton addBTN;
    private javax.swing.JButton bookingBTN;
    private javax.swing.JPanel bookingsPNL;
    private javax.swing.JButton clearBTN;
    private javax.swing.JButton customersBTN;
    private javax.swing.JPanel customersPNL;
    private javax.swing.JButton dashboardBTN;
    private javax.swing.JPanel dashboardPNL;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logoLBL;
    private javax.swing.JButton logoutBTN;
    private javax.swing.JLabel priceLBL;
    private javax.swing.JTextField priceTXT;
    private javax.swing.JButton reportsBTN;
    private javax.swing.JPanel reportsPNL;
    private javax.swing.JLabel roomNo;
    private javax.swing.JTextField roomNoTXT;
    private javax.swing.JTable roomTable;
    private javax.swing.JLabel roomType;
    private javax.swing.JTextField roomTypeTXT;
    private javax.swing.JButton roomsBTN;
    private javax.swing.JPanel roomsPNL;
    private javax.swing.JButton searchBTN1;
    private javax.swing.JTextField searchTXT;
    private javax.swing.JComboBox<String> statusCBX;
    private javax.swing.JLabel statusLBL;
    private javax.swing.JButton updateBTN;
    // End of variables declaration//GEN-END:variables
}
